webpackHotUpdate(0,{

/***/ "./home/home.component.html":
/***/ (function(module, exports) {

module.exports = "<ActionBar title=\"test\">\n  <StackLayout orientation=\"horizontal\"\n    ios:horizontalAlignment=\"center\"\n    android:horizontalAlignment=\"center\">\n    <!--<Image src=\"res://nativescript_logo\" class=\"action-image\"></Image>-->\n    <Label text=\".:: SWING TIME ::.\" class=\"action-label\"></Label>\n  </StackLayout>\n</ActionBar>\n\n\n\n\n<GridLayout>\n    <GridLayout>\n        <Tabs #tabs [selectedIndex]=\"defaultSelected\" (selectedIndexChanged)=\"onSelectedIndexChanged($event)\">\n\n            <TabContentItem [backgroundColor]=\"tabList[0].backgroundColor\">7\n                <StackLayout>\n                    <Label text=\".:: TUS RETOS ::.\" class=\"h1 text-center p-t-20\"></Label>\n                    \n\n                    <RadListView [items]=\"trainer\" marginRight=\"-2\">\n                        <ListViewGridLayout tkListViewLayout \n                            itemHeight=\"300\" spanCount=\"1\">\n                        </ListViewGridLayout>\n                        <ng-template tkListItemTemplate let-item=\"item\">        \n                            <GridLayout verticalAlignment=\"center\">\n                                <StackLayout orientation=\"vertical\"  height=\"210\">\n\n                                   <Label text=\"{{ item.recomend }}\"></Label>\n\n                                    <Label text=\"{{ item.estilo }}\"></Label>\n\n                                    <label text=\"para completar este reto debes nadar\"></label>\n\n                                    <Label text=\"{{ item.distancia }}\"></Label>\n\n                                    <Label text=\"{{ item.tiempo }}\"></Label>\n\n                                    <GridLayout>\n                                        <label text=\"cumplido\"></label>\n                                        <Switch checked=\"false\"></Switch>\n                                    </GridLayout> \n\n                                   \n                         \n\n                                </StackLayout>\n                            </GridLayout>\n                             \n\n                        </ng-template>\n                    </RadListView>\n\n                    <label text=\".........\"></label>\n                    <label text=\".........\"></label>\n                    <label text=\".........\"></label>\n                    <label text=\".........\"></label>\n                    <label text=\".........\"></label>\n\n                </StackLayout>\n            </TabContentItem>\n\n            <TabContentItem [backgroundColor]=\"tabList[1].backgroundColor\">\n                <StackLayout>\n                    <Image src=\"https://i.ibb.co/fNM4169/icon.png\" stretch=\"aspectFill\"></Image>\n                                    \n                    <label text=\"<------ en esta zona encontaras los retos que desdes cumplir\" class=\"h2 text-center p-t-10\" textWrap=\"true\"></label>\n                    <label text=\" en esta zona veras los retos cumplidos y modificar tus datos personales ------------>\" class=\"h2 text-center p-t-10\" textWrap=\"true\"></label>\n                    <label text=\" en el siguinte link encontarars una sere de videos con los que podras perfecionar tus tecnicas\" cclass=\"h2 text-center p-t-10\" textWrap=\"true\"></label>\n                </StackLayout>\n            </TabContentItem>\n\n            <TabContentItem [backgroundColor]=\"tabList[2].backgroundColor\">\n                <StackLayout>\n                    <Label text=\".::MIS DATOS::.\" class=\"h1 text-center p-t-20\"></Label>\n\n                \n\n                    <RadDataForm [source]=\"userList\">\n                            <TKEntityProperty tkDataFormProperty\n                                name=\"nombre\" displayName=\"NOMBRE\"\n                                index=\"0\"></TKEntityProperty>\n                            <TKEntityProperty tkDataFormProperty\n                                name=\"apellido\" displayName=\"APELLIDO\"\n                                index=\"1\"></TKEntityProperty>\n                            <TKEntityProperty tkDataFormProperty\n                                name=\"edad\" displayName=\"EDAD\"\n                                index=\"2\"></TKEntityProperty>\n                            <TKEntityProperty tkDataFormProperty\n                                name=\"peso\" displayName=\"PESO\"\n                                index=\"3\"></TKEntityProperty>\n                            <TKEntityProperty tkDataFormProperty\n                                name=\"nivel\" displayName=\"NIVEL\"\n                                index=\"4\"></TKEntityProperty>\n                            <TKEntityProperty tkDataFormProperty\n                                name=\"genero\" displayName=\"GENERO\"\n                                index=\"5\"></TKEntityProperty>\n                    </RadDataForm>\n\n                    <Label text=\".::RETOS CUMPLIDOS::.\" class=\"h1 text-center p-t-20\"></Label> \n\n                </StackLayout>\n                \n            </TabContentItem>\n\n           \n        </Tabs>\n    </GridLayout>\n    \n\n    <!-- bottom tabs -->\n    <GridLayout height=\"auto\" verticalAlignment=\"bottom\" columns=\"*, *, *\">\n\n        <!-- base layer -->\n        <AbsoluteLayout col=\"0\" colSpan=\"5\" verticalAlignment=\"bottom\">\n            <GridLayout #tabBGContainer columns=\"auto, 10, auto, 10, auto\">\n                <GridLayout #leftTabs col=\"0\" colSpan=\"2\" height=\"80\"\n                    [backgroundColor]=\"tabContainer.backgroundColor\"\n                    verticalAlignment=\"bottom\" borderRadius=\"0 68 0 0\"></GridLayout>\n                <GridLayout #centerPatch col=\"1\" colSpan=\"3\" height=\"40\"\n                    [backgroundColor]=\"tabContainer.backgroundColor\"\n                    verticalAlignment=\"bottom\"></GridLayout>\n                <GridLayout #rightTabs col=\"3\" colSpan=\"4\" height=\"80\"\n                    [backgroundColor]=\"tabContainer.backgroundColor\"\n                    verticalAlignment=\"bottom\" borderRadius=\"68 0 0 0\"></GridLayout>\n\n                <!-- focus circle -->\n                <GridLayout #centerCircle col=\"1\" colSpan=\"3\" height=\"100\"\n                    width=\"100\" [backgroundColor]=\"tabList[currentTabIndex].backgroundColor\"\n                    borderRadius=\"50\" verticalAlignment=\"bottom\" marginBottom=\"10\">\n                    <GridLayout verticalAlignment=\"center\"\n                        horizontalAlignment=\"center\" height=\"90\" width=\"90\"\n                        [backgroundColor]=\"tabContainer.focusColor\"\n                        borderRadius=\"45\"></GridLayout>\n                </GridLayout>\n\n            </GridLayout>\n        </AbsoluteLayout>\n\n        <!-- tab contents -->\n        <GridLayout #tabContents *ngFor=\"let item of tabList; let i = index\"\n            [col]=\"i\" marginTop=\"20\" (tap)=\"onBottomNavTap(i)\"\n            verticalAlignment=\"middle\">\n            <Label class=\"fa-regular\" [text]=\"item.text\" verticalAlignment=\"middle\"\n                horizontalAlignment=\"center\" [color]=\"item.color\" fontSize=\"20\" [icon]=\"item.icon\"> </Label>\n           \n          \n\n        </GridLayout>\n\n        <!-- pan layer -->\n        <GridLayout #dragCircle column=\"0\" colSpan=\"5\" (pan)=\"onCenterCirclePan($event)\"\n            verticalAlignment=\"center\" horizontalAlignment=\"center\" height=\"90\"\n            width=\"90\" backgroundColor=\"transparent\" borderRadius=\"45\"></GridLayout>\n\n    </GridLayout>\n\n</GridLayout>\n"

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,